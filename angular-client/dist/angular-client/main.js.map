{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-employees/admin-employees.component.css","webpack:///./src/app/admin-employees/admin-employees.component.html","webpack:///./src/app/admin-employees/admin-employees.component.ts","webpack:///./src/app/admin-employees/dialog-data-employees.html","webpack:///./src/app/admin-employees/dialog-data-update-employees.html","webpack:///./src/app/admin-equipment/admin-equipment.component.css","webpack:///./src/app/admin-equipment/admin-equipment.component.html","webpack:///./src/app/admin-equipment/admin-equipment.component.ts","webpack:///./src/app/admin-equipment/dialog-data-equipment.html","webpack:///./src/app/admin-equipment/dialog-data-update-equipment.html","webpack:///./src/app/admin-projects/admin-projects.component.css","webpack:///./src/app/admin-projects/admin-projects.component.html","webpack:///./src/app/admin-projects/admin-projects.component.ts","webpack:///./src/app/admin-projects/dialog-data-projects.html","webpack:///./src/app/admin-projects/dialog-data-update-projects.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/user-details/user-details.component.css","webpack:///./src/app/user-details/user-details.component.html","webpack:///./src/app/user-details/user-details.component.ts","webpack:///./src/app/user-projects/dialog-data-login.html","webpack:///./src/app/user-projects/user-projects.component.css","webpack:///./src/app/user-projects/user-projects.component.html","webpack:///./src/app/user-projects/user-projects.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 400px;\\r\\n  }\"","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Logo</span>\\r\\n    <a routerLink=\\\"/admin-equipment\\\" routerLinkActive=\\\"active\\\"><button mat-raised-button class=\\\"navButton\\\">Admin\\r\\n        equipment\\r\\n      </button></a>\\r\\n    <a routerLink=\\\"/admin-employees\\\"><button mat-raised-button class=\\\"navButton\\\">Admin employees\\r\\n      </button></a>\\r\\n    <a routerLink=\\\"/admin-projects\\\"><button mat-raised-button class=\\\"navButton\\\">Admin projects\\r\\n      </button></a>\\r\\n    <span class=\\\"example-spacer\\\">\\r\\n    </span>\\r\\n    <a>\\r\\n      <mat-icon class=\\\"example-icon\\\" (click)=\\\"logout()\\\">logout</mat-icon>\\r\\n    </a>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"container\\\">\\r\\n<button mat-fab color=\\\"accent\\\" (click)=\\\"openDialog()\\\">\\r\\n  <mat-icon aria-label=\\\"Example icon-button with a plus icon\\\">add</mat-icon>\\r\\n</button>\\r\\n<br>\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let item of empData\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <mat-card class=\\\"example-card\\\">\\r\\n          <mat-card-actions>\\r\\n              <button mat-icon-button mat-button (click)=\\\"deleteEmp(item._id)\\\">\\r\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button (click)=\\\"updateDialog(item.id)\\\">\\r\\n                  <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">update</mat-icon>\\r\\n                </button>\\r\\n          </mat-card-actions>\\r\\n          <mat-card-header>\\r\\n            <mat-card-title>Name : {{item.name}}</mat-card-title>\\r\\n            <mat-card-subtitle>Nationality: {{item.nationality}}</mat-card-subtitle>\\r\\n          </mat-card-header>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport Axios from 'axios';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n// this interface to send data to the dialog if it's required\nexport interface DialogData {\n}\n\n@Component({\n    selector: 'app-admin-employees',\n    templateUrl: './admin-employees.component.html',\n    styleUrls: ['./admin-employees.component.css']\n})\nexport class AdminEmployeesComponent implements OnInit {\n    empData = [];\n\n    constructor(private router: Router,\n        public dialog: MatDialog) { }\n\n    ngOnInit() {\n        this.getEmploy(this.empData)\n    }\n\n    //this function to open the add employee dialog\n    openDialog() {\n        this.dialog.open(DialogDataEmployees);\n    }\n\n    //this function to open the update employee dialog\n    updateDialog(id) {\n        this.dialog.open(DialogDataUpdateEmployees, {\n            data: { id: id }\n        });\n    }\n\n    //this function to out from the page\n    logout() {\n        this.router.navigate(['home'])\n    }\n\n    //this function to retreve the data from the server\n    getEmploy(empData = []) {\n        Axios.get('/getEmp')\n            .then((data) => {\n                for (var i = 0; i < data.data.length; i++) {\n                    empData.push(data.data[i])\n                }\n            })\n            .catch((err) => {\n                throw err;\n            })\n    }\n\n    //this function to delete an employee from the server\n    deleteEmp(id) {\n        Axios.post('/deleteEmploy', { id })\n            .then(() => {\n                console.log('done');\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n}\n\n// this the add dialog\n@Component({\n    selector: 'dialog-data-employees',\n    templateUrl: 'dialog-data-employees.html',\n})\nexport class DialogDataEmployees {\n    constructor(\n        public dialogRef: MatDialogRef<AdminEmployeesComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n    //this function to add an employee from the server\n    Add(name = '', nationality = '', JobTitle = '') {\n        Axios.post('/addEmp', { name, nationality, JobTitle })\n            .then(() => {\n                alert(\"the data has been saved <3\");\n            })\n            .catch((err) => {\n                throw err;\n            })\n    }\n}\n\n// this the update dialog\n@Component({\n    selector: 'dialog-data-update-employees',\n    templateUrl: 'dialog-data-update-employees.html',\n})\nexport class DialogDataUpdateEmployees {\n    constructor(\n        public dialogRef: MatDialogRef<AdminEmployeesComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n    //this function to update an employee from the server\n    Update(id, name, nationality, jobTitle) {\n        Axios.post('/updateEmp', { id, name, nationality, jobTitle })\n            .then(() => {\n                console.log('done');\n            })\n            .catch((err) => {\n                throw err;\n            })\n    }\n}","module.exports = \"<h1 mat-dialog-title>Add Employee</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Emplyee name\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Emplyee nationality\\\" [(ngModel)]=\\\"nationality\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Emplyee JobTitle\\\" [(ngModel)]=\\\"JobTitle\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"Add(name , nationality, JobTitle)\\\">Add</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Update Employee</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Emplyee name\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Emplyee nationality\\\" [(ngModel)]=\\\"nationality\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Emplyee JobTitle\\\" [(ngModel)]=\\\"JobTitle\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"Update(data.id , name , nationality, JobTitle)\\\">Update</button>\\r\\n</div>\"","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 400px;\\r\\n  }\"","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\n  <mat-toolbar-row>\\n    <span>Logo</span>\\n    <a routerLink=\\\"/admin-equipment\\\" routerLinkActive=\\\"active\\\"><button mat-raised-button class=\\\"navButton\\\">Admin\\n        equipment\\n      </button></a>\\n    <a routerLink=\\\"/admin-employees\\\"><button mat-raised-button class=\\\"navButton\\\">Admin employees\\n      </button></a>\\n    <a routerLink=\\\"/admin-projects\\\"><button mat-raised-button class=\\\"navButton\\\">Admin projects\\n      </button></a>\\n    <span class=\\\"example-spacer\\\">\\n    </span>\\n    <a>\\n      <mat-icon class=\\\"example-icon\\\" (click)=\\\"logout()\\\">logout</mat-icon>\\n    </a>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<br>\\n<br>\\n<div class=\\\"container\\\">\\n  <button mat-fab color=\\\"accent\\\" (click)=\\\"openDialog()\\\">\\n    <mat-icon aria-label=\\\"Example icon-button with a plus icon\\\">add</mat-icon>\\n  </button>\\n  <br>\\n  <br>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let item of equipData\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-actions>\\n            <button mat-icon-button (click)=\\\"deleteEquip(item._id)\\\">\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n            </button>\\n            <button mat-icon-button (click)=\\\"updateDialog(item._id)\\\">\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">update</mat-icon>\\n            </button>\\n          </mat-card-actions>\\n          <mat-card-header>\\n            <mat-card-title>Name : {{item.name}}</mat-card-title>\\n            <mat-card-subtitle>Nationality: {{item.serialNumber}}</mat-card-subtitle>\\n          </mat-card-header>\\n          <img mat-card-image src=\\\"{{item.attachment}}\\\" alt=\\\"Photo\\\">  \\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\nimport Axios from 'axios';\n\n// this interface to send data to the dialog if it's required\nexport interface DialogData {\n}\n\n@Component({\n  selector: 'app-admin-equipment',\n  templateUrl: './admin-equipment.component.html',\n  styleUrls: ['./admin-equipment.component.css']\n})\nexport class AdminEquipmentComponent implements OnInit {\n  equipData = [];\n  constructor(private router: Router,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getEquip(this.equipData)\n  }\n\n  //this function to open the add equipment dialog\n  openDialog() {\n    this.dialog.open(DialogDataEquipment);\n  }\n\n  //this function to open the update equipment dialog\n  updateDialog(id) {\n    this.dialog.open(DialogDataUpdateEquipment, {\n      data: { id: id }\n    });\n  }\n\n  //this function to out from the page\n  logout() {\n    this.router.navigate(['home'])\n  }\n\n  //this function to retreve the data from the server\n  getEquip(equipData = []) {\n    Axios.get('/getEquip')\n      .then((data) => {\n        for (var i = 0; i < data.data.length; i++) {\n          equipData.push(data.data[i]);\n        }\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  //this function to delete an equipment from the server\n  deteleEquip(id) {\n    Axios.post('/deteleEquip', { id })\n      .then(() => {\n        console.log('done');\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n}\n\n// this the add dialog\n@Component({\n  selector: 'dialog-data-equipment',\n  templateUrl: 'dialog-data-equipment.html',\n})\nexport class DialogDataEquipment {\n  image = '';\n  constructor(\n    public dialogRef: MatDialogRef<AdminEquipmentComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  //this function to upload picture from the user\n  uploadImage = (event) => {\n    let img = event.target.files[0];\n    let that = this\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(img);\n    fileReader.onload = function (e) {\n      that.image = e.target.result;\n    }\n  }\n\n  //this function to add an equipment from the server\n  Add(name, serialNumber) {\n    Axios.post('/addEquip', { name, serialNumber, image: this.image })\n      .then(function () {\n        console.log('done');\n      })\n      .catch(function (err) {\n        throw err;\n      })\n  }\n}\n\n// this the update dialog\n@Component({\n  selector: 'dialog-data-update-equipment',\n  templateUrl: 'dialog-data-update-equipment.html',\n})\nexport class DialogDataUpdateEquipment {\n\n  constructor(\n    public dialogRef: MatDialogRef<AdminEquipmentComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  //this function to update an equipment from the server\n  Update(id, name, serialNumber) {\n    Axios.post('/updateEquip', { id: id, name: name, serialNumber: serialNumber })\n      .then(() => {\n        console.log('done update');\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n}","module.exports = \"<h1 mat-dialog-title>Add Equipment</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"equipment name\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"number\\\" placeholder=\\\"equipment serialNumber\\\" [(ngModel)]=\\\"serialNumber\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n\\r\\n  <input type=\\\"file\\\" placeholder=\\\"equipment attachment\\\" (change)=\\\"uploadImage($event)\\\">\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"Add(name , serialNumber)\\\">Add</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Update Equipment</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"equipment name\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"number\\\" placeholder=\\\"equipment serialNumber\\\" [(ngModel)]=\\\"serialNumber\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"Update(data.id, name , serialNumber)\\\">Update</button>\\r\\n</div>\"","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n    max-width: 400px;\\r\\n    \\r\\n  }\\r\\n  \"","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\n  <mat-toolbar-row>\\n    <span>Logo</span>\\n    <a routerLink=\\\"/admin-equipment\\\" routerLinkActive=\\\"active\\\"><button mat-raised-button class=\\\"navButton\\\">Admin\\n        equipment\\n      </button></a>\\n    <a routerLink=\\\"/admin-employees\\\"><button mat-raised-button class=\\\"navButton\\\">Admin employees\\n      </button></a>\\n    <a routerLink=\\\"/admin-projects\\\"><button mat-raised-button class=\\\"navButton\\\">Admin projects\\n      </button></a>\\n    <span class=\\\"example-spacer\\\">\\n    </span>\\n    <a>\\n      <mat-icon class=\\\"example-icon\\\" (click)=\\\"logout()\\\">logout</mat-icon>\\n    </a>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<br>\\n<br>\\n<div class=\\\"container\\\">\\n  <button mat-fab color=\\\"accent\\\" (click)=\\\"openDialog()\\\">\\n    <mat-icon aria-label=\\\"Example icon-button with a plus icon\\\">add</mat-icon>\\n  </button>\\n  <br>\\n  <br>\\n  <br>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let item of proData\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <mat-card class=\\\"example-card\\\">\\n          <mat-card-actions>\\n            <button mat-icon-button (click)=\\\"deleteProject(item._id)\\\">\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">delete</mat-icon>\\n            </button>\\n            <button mat-icon-button (click)=\\\"updateDialog(item.id)\\\">\\n              <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">update</mat-icon>\\n            </button>\\n          </mat-card-actions>\\n          <mat-card-header>\\n            <mat-card-title>Project Name : {{item.name}}</mat-card-title>\\n            <mat-card-subtitle>Type: {{item.type}}</mat-card-subtitle>\\n          </mat-card-header>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\nimport Axios from 'axios';\n\n// this interface to send data to the dialog if it's required\nexport interface DialogData {\n}\n\n@Component({\n  selector: 'app-admin-projects',\n  templateUrl: './admin-projects.component.html',\n  styleUrls: ['./admin-projects.component.css']\n})\nexport class AdminProjectsComponent implements OnInit {\n  proData = [];\n\n  constructor(private router: Router,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.projectData(this.proData)\n  }\n  \n  //this function to open the add project dialog\n  openDialog() {\n    this.dialog.open(DialogDataProjects);\n  }\n  \n  //this function to open the update project dialog\n  updateDialog(id) {\n    this.dialog.open(DialogDataUpdateProjects, {\n      data: { id: id }\n    });\n  }\n  \n  //this function to out from the page\n  logout() {\n    this.router.navigate(['home'])\n  }\n  \n  //this function to retreve the data from the server\n  projectData(proData = []) {\n    Axios.get('/getProject')\n      .then((data) => {\n        for (var i = 0; i < data.data.length; i++) {\n          proData.push(data.data[i])\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  \n  //this function to delete an project from the server\n  deleteProject(id) {\n    Axios.post('/deletePro', { id })\n      .then(() => {\n        console.log('deleted');\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n}\n\n// this the add dialog\n@Component({\n  selector: 'dialog-data-projects',\n  templateUrl: 'dialog-data-projects.html',\n})\nexport class DialogDataProjects {\n\n  constructor(\n    public dialogRef: MatDialogRef<AdminProjectsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  \n  //this function to add an project from the server\n  Add(id, name, type, from, to) {\n    Axios.post('/addProject', { id, name, type, from, to })\n      .then(() => {\n        console.log('done');\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n}\n\n// this the update dialog\n@Component({\n  selector: 'dialog-data-update-projects',\n  templateUrl: 'dialog-data-update-projects.html',\n})\nexport class DialogDataUpdateProjects {\n\n  constructor(\n    public dialogRef: MatDialogRef<AdminProjectsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  \n  //this function to update an project from the server\n  Update(id, name, type, from, to) {\n    Axios.post('/updateProject', { id, name, type, from, to })\n      .then(() => {\n        console.log('done');\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n}","module.exports = \"<h1 mat-dialog-title>Add Project</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Project name\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Project type\\\" [(ngModel)]=\\\"type\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"date\\\" placeholder=\\\"Project from\\\" [(ngModel)]=\\\"from\\\">\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"date\\\" placeholder=\\\"Project to\\\" [(ngModel)]=\\\"to\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"Add(name, type, from, to)\\\">Add</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Update Project</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Project name\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Project type\\\" [(ngModel)]=\\\"type\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"date\\\" placeholder=\\\"Project from\\\" [(ngModel)]=\\\"from\\\">\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"date\\\" placeholder=\\\"Project to\\\" [(ngModel)]=\\\"to\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"Update(data.id, name, type, from, to)\\\">Update</button>\\r\\n</div>\"","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet>\\n  \\n</router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminEquipmentComponent, DialogDataEquipment, DialogDataUpdateEquipment } from './admin-equipment/admin-equipment.component';\nimport { AdminEmployeesComponent, DialogDataEmployees, DialogDataUpdateEmployees } from './admin-employees/admin-employees.component';\nimport { AdminProjectsComponent, DialogDataProjects, DialogDataUpdateProjects } from './admin-projects/admin-projects.component';\nimport { UserProjectsComponent, DialogDataLogin } from './user-projects/user-projects.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgDragDropModule } from 'ng-drag-drop';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'admin-equipment',\n    component: AdminEquipmentComponent\n  },\n  {\n    path: 'admin-employees',\n    component: AdminEmployeesComponent\n  },\n  {\n    path: 'admin-projects',\n    component: AdminProjectsComponent\n  },\n  {\n    path: 'user-projects',\n    component: UserProjectsComponent\n  },\n  {\n    path: 'user-details',\n    component: UserDetailsComponent\n  }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AdminEquipmentComponent,\n    AdminEmployeesComponent,\n    AdminProjectsComponent,\n    UserProjectsComponent,\n    UserDetailsComponent,\n    DialogDataEquipment,\n    DialogDataUpdateEquipment,\n    DialogDataEmployees,\n    DialogDataUpdateEmployees,\n    DialogDataProjects,\n    DialogDataUpdateProjects,\n    DialogDataLogin\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatIconModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatTableModule,\n    FormsModule,\n    NgDragDropModule,\n    MatCardModule\n  ],\n  exports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatIconModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatTableModule,\n    FormsModule,\n    MatCardModule\n  ],\n  entryComponents: [\n    AdminEquipmentComponent,\n    DialogDataEquipment,\n    DialogDataEmployees,\n    DialogDataProjects,\n    DialogDataUpdateProjects,\n    DialogDataUpdateEmployees,\n    DialogDataUpdateEquipment,\n    DialogDataLogin\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 100 1 ;\\r\\n  }\\r\\n  \\r\\n  .navButton {\\r\\n      left: 200px;\\r\\n      margin:5px;\\r\\n  }\"","module.exports = \"<app-user-projects></app-user-projects>\"","import { Component, OnInit } from '@angular/core';\n\nexport interface DialogData {\n  name: string;\n  serialNumber: string;\n  attachment: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n}","module.exports = \".example-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n\\r\\n.example-spacer {\\r\\n  flex: 100 1 ;\\r\\n}\\r\\n\\r\\n.navButton {\\r\\n\\tleft: 200px;\\r\\n\\tmargin:5px;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n  margin: 100px;\\r\\n}\"","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\n    <mat-toolbar-row>\\n        <span>Logo</span>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<h1>Project Name : {{name}}</h1>\\n\\n<div class=\\\"container\\\">\\n    <h3>Employees</h3>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading\\\">System Employees</div>\\n                <ul class=\\\"list-group\\\">\\n                    <li draggable *ngFor=\\\"let item of empData\\\" [dragData]=\\\"item\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-sm-3\\\">\\n            <div class=\\\"panel panel-default\\\" droppable (onDrop)=\\\"onItemDropEmp($event)\\\">\\n                <div class=\\\"panel-heading\\\">Assigned Employees</div>\\n                <div class=\\\"panel-body\\\">\\n                    <li *ngFor=\\\"let item of droppedEmp\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <br>\\n    <br>\\n    <h3>Equipment</h3>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading\\\">System Equipment</div>\\n                <ul class=\\\"list-group\\\">\\n                    <li draggable *ngFor=\\\"let item of equipData\\\" [dragData]=\\\"item\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n            <div class=\\\"panel panel-default\\\" droppable (onDrop)=\\\"onItemDropEquip($event)\\\">\\n                <div class=\\\"panel-heading\\\">Assigned Equipment</div>\\n                <div class=\\\"panel-body\\\">\\n                    <li *ngFor=\\\"let item of droppedEquip\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <a routerLink=\\\"/home\\\"><button class=\\\"btn\\\" mat-raised-button color=\\\"accent\\\">Back</button></a>\\n    <button class=\\\"btn\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"save(droppedEquip, droppedEmp)\\\">Save</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport Axios from 'axios';\nimport { jackel } from '../user-projects/user-projects.component';\nimport { Router } from '@angular/router';\n\nexport interface DialogData {\n}\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  droppedEmp = [];\n  droppedEquip = [];\n  empData = [];\n  equipData = [];\n  id = '';\n  name = '';\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.getEmploy(this.empData);\n    this.getEquip(this.equipData);\n    this.name = jackel['name'];\n    this.id = jackel['id']\n  }\n\n  getEquip(equipData = []) {\n    Axios.get('/getEquip')\n      .then((data) => {\n        for (var i = 0; i < data.data.length; i++) {\n          equipData.push(data.data[i]);\n        }\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  //this function to retreve the data from the server\n  getEmploy(empData = []) {\n    Axios.get('/getEmp')\n      .then((data) => {\n        for (var i = 0; i < data.data.length; i++) {\n          empData.push(data.data[i])\n        }\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n\n  //this function to get data from the dropped object\n  onItemDropEmp(e: any) {\n    if (this.droppedEmp.length === 0) {\n      for (var i = 0; i < this.empData.length; i++) {\n        if (e.dragData.name === this.empData[i].name) {\n          this.droppedEmp.push(e.dragData);\n          this.removeEmp(e.dragData, this.empData)\n        }\n      }\n    } else {\n      alert(\"there's already an Employee\")\n    }\n  }\n\n  onItemDropEquip(e: any) {\n    // Get the dropped data here\n    if (this.droppedEquip.length === 0) {\n      for (var i = 0; i < this.equipData.length; i++) {\n        if (e.dragData.name === this.equipData[i].name) {\n          this.droppedEquip.push(e.dragData);\n          this.removeEquip(e.dragData, this.equipData);\n        }\n      }\n    } else {\n      alert(\"there's already an Equipment\")\n    }\n\n  }\n  //this function to save the dropped items in the database\n  \n  save(droppedEquip = [], droppedEmp = []) {\n     if (this.droppedEquip[0].name.length === 0 && this.droppedEmp[0].name.length === 0) {\n      alert('please assign employee and equipment before save <3 ')\n    } else {\n    Axios.post(\"/saveProject\", { id: this.id, Employee: droppedEmp[0].name, Equipment: droppedEquip[0].name })\n      .then(() => {\n        console.log('done')\n        this.router.navigate(['home']);\n      })\n      .catch((err) => {\n        throw err;\n      })\n    }\n  }\n  //outer function to remove the item the has be dragged\n  removeEquip(item: any, list: Array<any>) {\n    let index = list.map(function (e) {\n      return e.name\n    }).indexOf(item.name);\n    list.splice(index, 1);\n  }\n\n  removeEmp(item: any, list: Array<any>) {\n    let index = list.map(function (e) {\n      return e.name\n    }).indexOf(item.name);\n    list.splice(index, 1);\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>Login as admin</h1>\\r\\n<div mat-dialog-content>\\r\\n\\t <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Enter Admin Username\\\" [(ngModel)]=\\\"name\\\">\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n  \\r\\n <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput type=\\\"password\\\" placeholder=\\\"Enter Admin Password\\\" [(ngModel)]=\\\"password\\\" >\\r\\n  </mat-form-field>\\r\\n  <br>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial (click)=\\\"login(name,password)\\\">Login</button>\\r\\n</div>\"","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n.example-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n.example-spacer {\\r\\n  flex: 100 1 ;\\r\\n}\\r\\n.navButton {\\r\\n\\tleft: 200px;\\r\\n\\tmargin:5px;\\r\\n}\"","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\n  <mat-toolbar-row>\\n    <span>Logo</span>\\n    <span class=\\\"example-spacer\\\">\\n    </span>\\n    <a (click)=\\\"openDialog()\\\">\\n      <button mat-button color=\\\"primary\\\">\\n        <h3>Login</h3>\\n        <mat-icon class=\\\"example-icon\\\">person</mat-icon>\\n      </button>\\n    </a>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n  <ng-container matColumnDef=\\\"projectName\\\">\\n    <th mat-header-cell *matHeaderCellDef> Project Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"><a (click)=\\\"nextPage(element._id, element.name)\\\">{{element.name}} </a></td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"employees\\\">\\n    <th mat-header-cell *matHeaderCellDef> #Employees </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.employees}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"equipment\\\">\\n    <th mat-header-cell *matHeaderCellDef> #Equipment </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.equipment}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"fromDate\\\">\\n    <th mat-header-cell *matHeaderCellDef> From Date </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fromDate}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"toDate\\\">\\n    <th mat-header-cell *matHeaderCellDef> To Date </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.toDate}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\nimport Axios from 'axios';\n\n//global variable to send the data to other component\nexport var jackel = {}\n// this interface to send data to the dialog if it's required\nexport interface DialogData {\n}\n\n@Component({\n  selector: 'app-user-projects',\n  templateUrl: './user-projects.component.html',\n  styleUrls: ['./user-projects.component.css']\n})\n@Input()\nexport class UserProjectsComponent implements OnInit {\n  proData = [];\n  projectName = \"\"\n  dataSource = [];\n  displayedColumns: string[] = ['projectName', 'employees', 'equipment', 'fromDate', 'toDate'];\n\n  constructor(public dialog: MatDialog,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.projectData(this.proData);\n  }\n  \n  //this function to open the login dialog\n  openDialog() {\n    this.dialog.open(DialogDataLogin);\n  }\n  \n  //this function to retreve the data from the server\n  projectData(proData = []) {\n    Axios.get('/getProject')\n      .then((data) => {\n        for (var i = 0; i < data.data.length; i++) {\n          proData.push(data.data[i])\n        }\n        this.dataSource = this.proData;\n      })\n      .catch((err) => {\n        throw err;\n      })\n  }\n  //this function to go to th user details page and send the id and name of te project that been selected\n  nextPage(id, name) {\n    this.router.navigate(['user-details']);\n    jackel = { id: id, name: name }\n  }\n}\n\n//this is login dialog\n@Component({\n  selector: 'dialog-data-login',\n  templateUrl: 'dialog-data-login.html',\n})\nexport class DialogDataLogin {\n  constructor(\n    public dialogRef: MatDialogRef<UserProjectsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private router: Router) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  login(name = '', password = '') {\n    if (name.length === 0 && password.length === 0) {\n      alert('please fill the inputs')\n    } else if (name === 'admin' && password === 'admin') {\n      this.router.navigate(['admin-equipment']);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}